/* Toggles all PINS on PORTD
 * PIN 1 as output driver - all others as pull-ups
 * main.c
 *
 * Created: 3/29/2012 3:26:04 PM
 * 
 */ 


#include <avr/io.h>
#include "led.h"

/*
void init_adc(){
	ADMUX=(1<<REFS0);                         // For Aref=AVcc;
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); //Rrescalar div factor =128
}

uint16_t ReadADC(uint8_t ch){
   //Select ADC Channel ch must be 0-7
   ch=ch&0b00000111;
   ADMUX|=ch;

   //Start Single conversion
   ADCSRA|=(1<<ADSC);

   //Wait for conversion to complete
   while(!(ADCSRA & (1<<ADIF)));

   //Clear ADIF by writing one to it
   //Note you may be wondering why we have write one to clear it
   //This is standard way of clearing bits in io as said in datasheets.
   //The code writes '1' but it result in setting bit to '0' !!!

   ADCSRA|=(1<<ADIF);

   return(ADC);
}

*/
int main(void) {

  led_init();
  init_adc();
  
  uint16_t value=0;
  led_on(GREEN);
  int i=0;
  while(1){
  	
  		value=ReadADC(i);
  		
  		if (value==1023){
  			led_on(RED);
  		}
  		else{
  			led_off(RED);
  			led_on(YELLOW);
  		}
  		i++;
  		if(i==8) i=0;
 	}
  
  
}



